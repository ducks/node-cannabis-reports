#%RAML 0.8
title: node-cannabis-reports

/strains:
  displayName: Strains
  description: !include raml/data/strains/strains-description.md

  get:
    description: Gets a paginated list of strains with optional sorting.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
          
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/strains/strains-200.js
      400:
        body:
          application/json:
            example: !include raml/data/strains/strains-400.js

  /search:
    /{query}:
      description: The strain search API can be used to find strains by name.
        Search with at least 2 characters and get an array of strains to work
        with.

      uriParameters:
        query:
          type: string
          description: Search query to find strains in our system. Must be at
            least 2 characters.
          example: "Blue"
          required: true

      get:
        description: Returns search results for strains in our database.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-search-200.js
          400:
            body:
              application/json:
                example: !include raml/data/strains/strains-search-400.js
  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        description: UCPC for the cannabis strain you want information about.
        example: "VUJCJ4TYMG000000000000000"
        required: true
    get:
      description: Gets an individual strain based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/strains/strains-ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/strains/strains-ucpc-400.js


    /user:
      get:
        description: Get the user who added the strain to the database.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-user-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /reviews:
      get:
        description: Get the reviews for a cannabis strain.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-review-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /effectsFlavors:
      get:
        description: Get the average effects and flavors from reviews for this
          strain.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-effectsFlavors-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /seedCompany:
      get:
        description: Get the seed company that was responsible for a cannabis
          strain.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-seed-company-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /genetics:
      description: |
        More information on how to read and understand cannabis genetics can be
        found in our FAQ:

        https://www.cannabisreports.com/faq/cannabis-genetics/how-do-you-read-cannabis-genetics

        This goes up the genetic family tree looking for the parents of the
        strain. If you'd like to check out the children of a strain, see the
        documentation for `/strain/:ucpc/children`.
      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        description: Gets the strains that were the parent material for the
          strain with the given UCPC.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-genetics-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /children:
      description: |
        This will provide a paginated list of children that this strain was a
        parent of. Some strains have been bred into hundreds of other ones.

        For the parents of this strain, check out the `/strain/:ucpc/genetics`
        documentation.

      get:
        description: Get the child strains that this one has been bred into.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-children-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: This will provide a paginated list of item summary objects
        for this particular strain.
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of a strain using
          latitude and longitude.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

/flowers:
  displayName: Flowers
  description: !include raml/data/flowers/flowers-description.md

  get:
    description: Gets a paginated list of flowers with optional sorting.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/flowers/flowers-200.js
      400:
        body:
          application/json:
            example: !include raml/data/flowers/flowers-400.js

  /type/{flowerType}:
    uriParameters:
      flowerType:
        type: string
        example: flowers
        description: The type of flowers you want to search through.

    get:
      description: Gets a paginated list of products for a given type with
        optional sorting.
      queryParameters:
        page:
          type: integer
          description: !include raml/data/page-option-description.md
        sort:
          type: string
          description: !include raml/data/sort-option-description.md
      responses:
        200:
          body:
            application/json:
              example: !include raml/data/flowers/flower-type-200.js
        400:
          body:
            application/json:
              example: !include raml/data/flowers/flowers-400.js

  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        example: AHZ7H4N6467FVUDY3DAY00000
        description: UCPC for the cannabis flower you want information about.
        required: true

    get:
      description: Gets an individual flower based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/flowers/flowers-ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/flowers/flowers-400.js

    /user:
      get:
        description: Get the user who added the product to the database.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-user-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /reviews:
      get:
        description: Get the reviews for a cannabis flower.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-reviews-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /effectsFlavors:
      get:
        description: Get the average effects and flavors from reviews for this
          flower.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-effectsFlavors-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /producer:
      get:
        description: Gets the producer for a given flower.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-producers-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /strain:
      get:
        description: Gets the information about a strain for a flower with the
          given UCPC. 


        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-strain-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: Get information about the availability of a product using
        latitude and longitude. 
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of a strain using
          latitude and longitude.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

/extracts:
  displayName: Extracts
  description: !include raml/data/extracts/extracts-description.md 
    
  get:
    description: Gets a paginated list of extracts with optional sorting.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/extracts/extacts.js
      400:
        body:
          application/json:
            example: !include raml/data/invalid-sort-400.js

  /type/{extractType}:
    uriParameters:
      extractType:
        type: string
        example: shatter
        description: |
          One of the various types of extracts you would like to filter by.
          Acceptable types are:
            
          - Kief
          - Hash
          - Water-Hash
          - Oil
          - Wax
          - Crumble
          - Honeycomb
          - Shatter
          - Vaporizer-Disposable
          - Vaporizer-Cartridge 
        required: true

    get:
      description: Gets a paginated list of extracts with optional sorting.
      queryParameters:
        page:
          type: integer
          description: !include raml/data/page-option-description.md
            
        sort:
          type: string
          description: !include raml/data/sort-option-description.md

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/extracts/extract-type-200.js
        400:
          body:
            application/json:
              example: !include raml/data/invalid-sort-400.js

  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        description: UCPC for the cannabis extract you want information about.
        example: "3CV7E33XLHTJT2XZ4GMD00000"
        required: true
    get:
      description: Gets an individual extract based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/extracts/ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/extracts/extracts-404.js

    /user:
      get:
        description: Get the user who added the extract to the database.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-user-200.js
          404:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-404.js

    /reviews:
      get:
        description: Get the reviews for a cannabis extract.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-reviews-200.js
          404:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-404.js

    /effectsFlavors:
      get:
        description: Get the average effects and flavors from reviews for this
          extract.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-effectsFlavors-200.js
          404:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-404.js

    /producer:
      description: |
        Extracts in the Cannabis Reports system have a producer
        associated with them. Some dispensaries are not yet listing the company
        that produced their extracts for their menus. For those extracts, an
        "Unknown Producer" has been associated. Trying to get information about
        his producer will give you the UCPC and name with nothing more.

        More information about the various fields for the producer can be found
        in the cannabis producer object definition section.

      get:
        description: Gets the producer for a given extract.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-producers-200.js
          404:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-404.js

    /strain:
      get:
        description: Gets the information about a strain for an extract with the
          given UCPC. 


        responses:
          200:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-strain-200.js
          404:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: This will provide a paginated list of item summary objects
        for this particular strain.
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of an extract using
          latitude and longitude.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-404.js

/edibles:
  displayName: Edibles
  description: !include raml/data/edibles/edibles-description.md 
    
  get:
    description: Gets a paginated list of edibles with optional sorting.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/edibles/edibles.js
      400:
        body:
          application/json:
            example: !include raml/data/invalid-sort-400.js

  /type/{edibleType}:
    uriParameters:
      edibleType:
        type: string
        example: chocolate 
        description: |
          One of the various types of edibles you would like to filter by.
          See `Cannabis Edibles` object definition for valid types. 
        required: true

    get:
      description: Gets a paginated list of edibles with optional sorting.
      queryParameters:
        page:
          type: integer
          description: !include raml/data/page-option-description.md
            
        sort:
          type: string
          description: !include raml/data/sort-option-description.md

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/edibles/edible-type-200.js
        400:
          body:
            application/json:
              example: !include raml/data/invalid-sort-400.js

  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        description: UCPC for the cannabis edible you want information about.
        example: "4KXM32V9YFC3G2EUNWP400000"
        required: true
    get:
      description: Gets an individual edible based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/edibles/edible-ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/edibles/edibles-404.js

    /user:
      get:
        description: Get the user who added the edible to the database.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/edibles/edible-user-200.js
          404:
            body:
              application/json:
                example: !include raml/data/extracts/extracts-404.js

    /reviews:
      get:
        description: Get the reviews for a cannabis edible.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/edibles/edible-reviews-200.js
          404:
            body:
              application/json:
                example: !include raml/data/edibles/edibles-404.js

    /effectsFlavors:
      get:
        description: Get the average effects and flavors from reviews for this
          edible.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/edibles/edible-effectsFlavors-200.js
          404:
            body:
              application/json:
                example: !include raml/data/edibles/edibles-404.js

    /producer:
      description: |
        More information about the various fields for the producer can be found
        in the cannabis producer object definition section.

      get:
        description: Gets the producer for a given edible.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/edibles/edible-producer-200.js
          404:
            body:
              application/json:
                example: !include raml/data/edibles/edibles-404.js

    /strain:
      get:
        description: Gets the information about a strain for an edible with the
          given UCPC. 


        responses:
          200:
            body:
              application/json:
                example: !include raml/data/edibles/edibles-strain-200.js
          404:
            body:
              application/json:
                example: !include raml/data/edibles/edibles-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: This will provide a paginated list of item summary objects
        for this particular edible.
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of an edible using
          latitude and longitude.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/edibles/edibles-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/edibles/edibles-404.js

/products:
  displayName: Products
  description: !include raml/data/products/products-description.md 
    
  get:
    description: Gets a paginated list of edibles with optional sorting.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/products/products.js
      400:
        body:
          application/json:
            example: !include raml/data/invalid-sort-400.js

  /type/{productType}:
    uriParameters:
      productType:
        type: string
        example: pre-roll 
        description: |
          One of the various types of products you would like to filter by.
          See `Cannabis Products` object definition for valid types. 
        required: true

    get:
      description: Gets a paginated list of products with optional sorting.
      queryParameters:
        page:
          type: integer
          description: !include raml/data/page-option-description.md
            
        sort:
          type: string
          description: !include raml/data/sort-option-description.md

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/products/product-type-200.js
        400:
          body:
            application/json:
              example: !include raml/data/invalid-sort-400.js

  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        description: UCPC for the cannabis product you want information about.
        example: "9XVU7NK3PEGLAJ372X4F00000"
        required: true
    get:
      description: Gets an individual product based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/products/products-ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/products/products-404.js

    /user:
      get:
        description: Get the user who added the product to the database.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/products/products-user-200.js
          404:
            body:
              application/json:
                example: !include raml/data/products/products-404.js

    /reviews:
      get:
        description: Get the reviews for a cannabis product.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/products/products-reviews-200.js
          404:
            body:
              application/json:
                example: !include raml/data/products/products-404.js

    /effectsFlavors:
      get:
        description: Get the average effects and flavors from reviews for this
          product.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/products/products-effectsFlavors-200.js
          404:
            body:
              application/json:
                example: !include raml/data/products/products-404.js

    /producer:
      description: |
        More information about the various fields for the producer can be found
        in the cannabis producer object definition section.

      get:
        description: Gets the producer for a given product.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/products/products-producer-200.js
          404:
            body:
              application/json:
                example: !include raml/data/products/products-404.js

    /strain:
      get:
        description: Gets the information about a strain for a product with the
          given UCPC. 

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/products/products-strain-200.js
          404:
            body:
              application/json:
                example: !include raml/data/products/products-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: This will provide a paginated list of item summary objects
        for this particular product.
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of a product using
          latitude and longitude.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/products/products-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/products/products-404.js

/producers:
  displayName: Producers
  description: !include raml/data/products/products-description.md 
    
  get:
    description: Gets a paginated list of producers from the system.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/producers/producers.js
      400:
        body:
          application/json:
            example: !include raml/data/invalid-sort-400.js

  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        description: UCPC of the producer you want information about.
        example: "0000000000L6M7E0000000000"
        required: true
    get:
      description: Gets an individual producer based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/producers/producers-ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/producers/producers-404.js

    /extracts:
      get:
        description: Gets a paginated list of extracts for a producer with the
          given UCPC. 
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
          sort:
            type: string
            description: !include raml/data/sort-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/producers/producers-extracts-200.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js

    /edibles:
      get:
        description: Gets a paginated list of edibles for a producer with the
          given UCPC. 
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
          sort:
            type: string
            description: !include raml/data/sort-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/producers/producers-edibles-200.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js

    /products:
      get:
        description: Gets a paginated list of products for a producer with the
          given UCPC. 
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
          sort:
            type: string
            description: !include raml/data/sort-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/producers/producers-products-200.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: This will provide a paginated list of item summary objects
        for all availability from this producer.
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of everything from
          a producer using latitude and longitude. 

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/producers/producers-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js

/dispensaries:
  displayName: Dispensaries 
  description: !include raml/data/dispensaries/dispensaries-description.md 
    
  get:
    description: Gets a paginated list of dispensaries from the system.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/dispensaries/dispensaries.js
      400:
        body:
          application/json:
            example: !include raml/data/invalid-sort-400.js

  /{state}/{city}/{slug}:
    description: More information about the various fields can be found in the
      dispensary object section of the documentation.
    uriParameters:
      state:
        type: string
        example: ca
        description: Two character state for the dispensary.
        required: true
      city:
        type: string
        example: san-francisco
        description: City the dispensary is in.
        required: true
      slug:
        type: string
        example: grass-roots
        description: Slug for the name of the dispensary.

    get:
      description: Gets information about an individual dispensary based on the
        state, city, and slug.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/dispensaries/dispensaries-slug-200.js
        404:
          body:
            application/json:
              example: !include raml/data/dispensaries/dispensaries-404.js

    /strains:
      description: |
        This will return an array of dispensary menu items with strains for the
        items. More information about dispensary menu items can be found in the
        menu item object section of the documentation.

        More information about the strain fields can be found in the strain
        object section of the documentation.

      get:
        description: Get a paginated list of strains for a dispensary from the
          given information. 
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
          sort:
            type: string
            description: !include raml/data/sort-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/producers/producers-extracts-200.js
          400:
            body:
              application/json:
                example: !include raml/data/invalid-sort-400.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js

    /extracts:
      description: |
        This will return an array of dispensary menu items with extracts for the
        items. More information about dispensary menu items can be found in the
        menu item object section of the documentation.

        More information about the strain fields can be found in the strain
        object section of the documentation.

      get:
        description: Get a paginated list of extracts for a dispensary from the
          given information. 
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
          sort:
            type: string
            description: !include raml/data/sort-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/dispensaries/dispensaries-slug-extracts-200.js
          400:
            body:
              application/json:
                example: !include raml/data/invalid-sort-400.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js

    /edibles:
      description: |
        This will return an array of dispensary menu items with edibles for the
        items. More information about dispensary menu items can be found in the
        menu item object section of the documentation.

        More information about the strain fields can be found in the strain
        object section of the documentation.

      get:
        description: Get a paginated list of edibles for a dispensary from the
          given information. 
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
          sort:
            type: string
            description: !include raml/data/sort-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/dispensaries/dispensaries-slug-edibles-200.js
          400:
            body:
              application/json:
                example: !include raml/data/invalid-sort-400.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js

    /products:
      description: |
        This will return an array of dispensary menu items with products for the
        items. More information about dispensary menu items can be found in the
        menu item object section of the documentation.

        More information about the strain fields can be found in the strain
        object section of the documentation.

      get:
        description: Get a paginated list of products for a dispensary from the
          given information. 
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
          sort:
            type: string
            description: !include raml/data/sort-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/dispensaries/dispensaries-slug-products-200.js
          400:
            body:
              application/json:
                example: !include raml/data/invalid-sort-400.js
          404:
            body:
              application/json:
                example: !include raml/data/producers/producers-404.js
