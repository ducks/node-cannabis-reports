#%RAML 0.8
title: node-cannabis-reports

/strains:
  displayName: Strains
  description: !include raml/data/strains/strains-description.md

  get:
    description: Gets a paginated list of strains with optional sorting.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
          
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/strains/strains-200.js
      400:
        body:
          application/json:
            example: !include raml/data/strains/strains-400.js

  /search:
    /{query}:
      description: The strain search API can be used to find strains by name.
        Search with at least 2 characters and get an array of strains to work
        with.

      uriParameters:
        query:
          type: string
          description: Search query to find strains in our system. Must be at
            least 2 characters.
          example: "Blue"
          required: true

      get:
        description: Returns search results for strains in our database.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-search-200.js
          400:
            body:
              application/json:
                example: !include raml/data/strains/strains-search-400.js
  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        description: UCPC for the cannabis strain you want information about.
        example: "VUJCJ4TYMG000000000000000"
        required: true
    get:
      description: Gets an individual strain based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/strains/strains-ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/strains/strains-ucpc-400.js


    /user:
      get:
        description: Get the user who added the strain to the database.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-user-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /reviews:
      get:
        description: Get the reviews for a cannabis strain.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-review-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /effectsFlavors:
      get:
        description: Get the average effects and flavors from reviews for this
          strain.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-effectsFlavors-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /seedCompany:
      get:
        description: Get the seed company that was responsible for a cannabis
          strain.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-seed-company-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /genetics:
      description: |
        More information on how to read and understand cannabis genetics can be
        found in our FAQ:

        https://www.cannabisreports.com/faq/cannabis-genetics/how-do-you-read-cannabis-genetics

        This goes up the genetic family tree looking for the parents of the
        strain. If you'd like to check out the children of a strain, see the
        documentation for `/strain/:ucpc/children`.
      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        description: Gets the strains that were the parent material for the
          strain with the given UCPC.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-genetics-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /children:
      description: |
        This will provide a paginated list of children that this strain was a
        parent of. Some strains have been bred into hundreds of other ones.

        For the parents of this strain, check out the `/strain/:ucpc/genetics`
        documentation.

      get:
        description: Get the child strains that this one has been bred into.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-children-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: This will provide a paginated list of item summary objects
        for this particular strain.
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of a strain using
          latitude and longitude.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

/flowers:
  displayName: Flowers
  description: !include raml/data/flowers/flowers-description.md

  get:
    description: Gets a paginated list of flowers with optional sorting.
    queryParameters:
      page:
        type: integer
        description: !include raml/data/page-option-description.md
      sort:
        type: string
        description: !include raml/data/sort-option-description.md

    responses:
      200:
        body:
          application/json:
            example: !include raml/data/flowers/flowers-200.js
      400:
        body:
          application/json:
            example: !include raml/data/flowers/flowers-400.js

  /type/{flowerType}:
    uriParameters:
      flowerType:
        type: string
        example: flowers
        description: The type of flowers you want to search through.

    get:
      description: Gets a paginated list of products for a given type with
        optional sorting.
      queryParameters:
        page:
          type: integer
          description: !include raml/data/page-option-description.md
        sort:
          type: string
          description: !include raml/data/sort-option-description.md
      responses:
        200:
          body:
            application/json:
              example: !include raml/data/flowers/flower-type-200.js
        400:
          body:
            application/json:
              example: !include raml/data/flowers/flowers-400.js

  /{ucpc}:
    uriParameters:
      ucpc:
        type: string
        example: AHZ7H4N6467FVUDY3DAY00000
        description: UCPC for the cannabis flower you want information about.
        required: true

    get:
      description: Gets an individual flower based on the UCPC.

      responses:
        200:
          body:
            application/json:
              example: !include raml/data/flowers/flowers-ucpc-200.js
        400:
          body:
            application/json:
              example: !include raml/data/flowers/flowers-400.js

    /user:
      get:
        description: Get the user who added the product to the database.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-user-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /reviews:
      get:
        description: Get the reviews for a cannabis flower.
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-reviews-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /effectsFlavors:
      get:
        description: Get the average effects and flavors from reviews for this
          flower.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-effectsFlavors-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /producer:
      get:
        description: Gets the producer for a given flower.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-producers-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /strain:
      get:
        description: Gets the information about a strain for a flower with the
          given UCPC. 


        responses:
          200:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-strain-200.js
          404:
            body:
              application/json:
                example: !include raml/data/flowers/flowers-404.js

    /availability/geo/{lat}/{lng}/{radius}:
      description: Get information about the availability of a product using
        latitude and longitude. 
      uriParameters:
        lat:
          type: string
          example: 37.7749295
          description: Latitude for the center of your availability search.
          required: true
        lng:
          type: string
          example: -122.4194155
          description: Longitude for the center of your availability search.
          required: true
        radius:
          type: integer
          example: 10
          description: Radius to search for in miles, max 25.

      get:
        queryParameters:
          page:
            type: integer
            description: !include raml/data/page-option-description.md
        description: Get information about the availability of a strain using
          latitude and longitude.

        responses:
          200:
            body:
              application/json:
                example: !include raml/data/strains/strains-availability-200.js
          404:
            body:
              application/json:
                example: !include raml/data/strains/strains-404.js

/extracts:
  displayName: Extracts
  description: !include raml/data/extracts/extracts-description.md 
    
